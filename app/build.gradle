apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'realm-android'
apply plugin: 'io.fabric'
apply plugin: 'com.google.firebase.firebase-perf'

def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()

android {
    compileSdkVersion 29
    defaultConfig {
        applicationId "org.sugarandrose.app"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 28
        versionName "1.0.3"
        vectorDrawables.useSupportLibrary = true

        setProperty("archivesBaseName", "SugarAndRose-v$versionName-b$versionCode")

        buildConfigField "String", "BASE_URL", "\"https://sugarandrose.org/wp-json/wp/v2/\""
        buildConfigField "String", "WEB_PAGE", "\"https://sugarandrose.org/\""
        buildConfigField "String", "FB_NAME", "\"sugarandrose\""
        buildConfigField "String", "FB_ID", "\"1789118054658269\""
        buildConfigField "String", "INSTAGRAM_NAME", "\"sugarandrosen\""
        buildConfigField "String", "TWITTER_NAME", "\"sugarandrose\""
        buildConfigField "String", "TWITTER_ID", "\"199252121\""
        buildConfigField "String", "PINTEREST_NAME", "\"sugarandrosem\""
        buildConfigField "String", "EMAIL", "\"sugarandrosen@gmail.com\""
        buildConfigField "String", "MASTHEAD", "\"https://sugarandrose.org/kontakt/impressum/\""
        buildConfigField "String", "PRIVACY", "\"https://sugarandrose.org/kontakt/datenschutzerklaerung/\""
    }

    signingConfigs {
        if (keystorePropertiesFile.exists()) {
            keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
            release {
                keyAlias keystoreProperties['keyAlias']
                keyPassword keystoreProperties['keyPassword']
                storeFile file(keystoreProperties['storeFile'])
                storePassword keystoreProperties['storePassword']
            }
        }
    }

    buildTypes {
        release {
            if (keystorePropertiesFile.exists()) {
                signingConfig signingConfigs.release
            }
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    flavorDimensions "backend"
    productFlavors {
        dev {
            signingConfig signingConfigs.debug
            applicationIdSuffix ".dev"
            resValue "string", "app_name", "sugar&dev"
            dimension "backend"
        }
        prod {
            resValue "string", "app_name", "sugar&rose"
            dimension "backend"
        }
    }
    dataBinding {
        enabled = true
    }
    lintOptions {
        abortOnError true
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }
    packagingOptions {
        // Remove unneeded Realm native libs (nearly no devices use these)
        exclude 'lib/mips/librealm-jni.so'
        exclude 'lib/x86_64/librealm-jni.so'
    }
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

androidExtensions {
    experimental = true
}

dependencies {
    implementation Libs.kotlin_stdlib

    //ui
    implementation Libs.appcompat
    implementation Libs.material
    implementation Libs.fragment
    implementation Libs.constraintlayout
    implementation Libs.core_ktx
    implementation Libs.customtabs

    kapt Libs.databinding_compiler

    implementation Libs.adapters
    implementation Libs.recyclerview_fastscroll
    implementation Libs.materialshowcaseview


    //network
    implementation Libs.retrofit
    implementation Libs.converter_gson
    implementation Libs.adapter_rxjava2
    implementation Libs.okhttp
    implementation Libs.logging_interceptor
    implementation Libs.gson
    implementation Libs.jsoup

    //di
    kapt Libs.dagger_compiler
    implementation Libs.dagger

    //rx
    implementation Libs.rxjava
    implementation Libs.rxandroid
    implementation Libs.rxkotlin
    implementation Libs.rxpermissions

    //realm
    kapt Libs.realm_annotations_processor
    kapt Libs.realm_annotations

    //image
    implementation Libs.coil
    implementation Libs.subsampling_scale_image_view

    implementation Libs.coil

    //firebase
    implementation Libs.firebase_core
    implementation Libs.crashlytics
    implementation Libs.firebase_messaging
    implementation Libs.firebase_perf

    //util
    debugImplementation Libs.leakcanary_android
    releaseImplementation Libs.leakcanary_android_no_op
    implementation Libs.timber
    implementation Libs.threetenabp
    implementation(Libs.aboutlibraries) {
        transitive = true
    }
}

apply plugin: 'com.google.gms.google-services'
